; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /home/saurav/clojure/serpant_talk ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless ; popd
; Using host:port 127.0.0.1:32987 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉serpant-talk.talk꞉>  ; Use `alt+enter` to evaluate
clj꞉serpant-talk.talk꞉> 
; Jack-in done.
clj꞉serpant-talk.talk꞉> 
3
clj꞉serpant-talk.talk꞉> 
nil
clj꞉serpant-talk.talk꞉> 
nil
clj꞉serpant-talk.talk꞉> 
nil
clj꞉serpant-talk.talk꞉> 
nil
clj꞉serpant-talk.talk꞉> 
(def l (clojure.core/fn ([] (load-file "talk.clj"))))
clj꞉serpant-talk.talk꞉> 
(def l (clojure.core/fn ([] (load-file "talk.clj"))))
clj꞉serpant-talk.talk꞉> 
; Syntax error reading source at (REPL:83:46).
; Unmatched delimiter: )
clj꞉user꞉> 
#'serpant-talk.talk/hello-world
clj꞉serpant-talk.talk꞉> 
; Syntax error macroexpanding clojure.core/defn at (src/serpant_talk/talk.clj:85:1).
; serpant-talk.talk/hello - failed: simple-symbol? at: [:fn-name] spec: :clojure.core.specs.alpha/defn-args
clj꞉serpant-talk.talk꞉> 
; Syntax error macroexpanding clojure.core/defn at (src/serpant_talk/talk.clj:85:1).
; serpant-talk.talk/hello - failed: simple-symbol? at: [:fn-name] spec: :clojure.core.specs.alpha/defn-args
clj꞉serpant-talk.talk꞉> 
#'serpant-talk.talk/hello-world
clj꞉serpant-talk.talk꞉> 
; Syntax error macroexpanding clojure.core/defn at (src/serpant_talk/talk.clj:85:1).
; serpant-talk.talk/hello - failed: simple-symbol? at: [:fn-name] spec: :clojure.core.specs.alpha/defn-args
clj꞉serpant-talk.talk꞉> 
; Syntax error macroexpanding clojure.core/defn at (src/serpant_talk/talk.clj:85:1).
; serpant-talk.talk/hello - failed: simple-symbol? at: [:fn-name] spec: :clojure.core.specs.alpha/defn-args
clj꞉serpant-talk.talk꞉> 
; Syntax error compiling at (src/serpant_talk/talk.clj:90:1).
; Unable to resolve symbol: if-nots in this context
clj꞉serpant-talk.talk꞉> 
#'serpant-talk.talk/if-nots
clj꞉serpant-talk.talk꞉> 
; Syntax error compiling at (src/serpant_talk/talk.clj:90:10).
; Unable to resolve symbol: >3 in this context
clj꞉serpant-talk.talk꞉> 
; Syntax error compiling at (src/serpant_talk/talk.clj:90:10).
; Unable to resolve symbol: >3 in this context
clj꞉serpant-talk.talk꞉> 
Hello world!
nil
clj꞉serpant-talk.talk꞉> 
Hello world!
nil
clj꞉serpant-talk.talk꞉> 
Hello world!
nil
clj꞉serpant-talk.talk꞉> 
Hello world!
nil
clj꞉serpant-talk.talk꞉> 
Hello world!
nil
clj꞉serpant-talk.talk꞉> 
Hello world!
nil
clj꞉serpant-talk.talk꞉> 
1
clj꞉serpant-talk.talk꞉> 

; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /home/saurav/clojure/snake/src ; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.0.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]" ; popd
; Using host:port localhost:34207 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user꞉>  ; Use `alt+enter` to evaluate
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Syntax error compiling at (snake.clj:14:1).
; Unable to resolve symbol: import-static in this context
clj꞉snake꞉> 
nil
clj꞉import-static꞉> 
#'import-static/import-static
clj꞉import-static꞉> 
; Syntax error compiling at (snake.clj:14:1).
; Unable to resolve symbol: import-static in this context
clj꞉snake꞉> 
; Syntax error compiling at (snake.clj:14:1).
; Unable to resolve symbol: import-static in this context
clj꞉snake꞉> 
nil
clj꞉snake꞉> 
#'snake/VK_UP
clj꞉snake꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /home/saurav/clojure/snake/src ; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.0.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]" ; popd
; Using host:port localhost:39139 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user꞉> 
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Syntax error compiling at (snake.clj:14:1).
; Unable to resolve symbol: import-static in this context
clj꞉snake꞉> 
nil
clj꞉import-static꞉> 
#'import-static/import-static
clj꞉import-static꞉> 
#'snake/VK_UP
clj꞉snake꞉> 
nil
clj꞉snake꞉> 
#'snake/width
clj꞉snake꞉> 
#'snake/height
clj꞉snake꞉> 
#'snake/point-szie
clj꞉snake꞉> 
#'snake/turn-milis
clj꞉snake꞉> 
#'snake/win-length
clj꞉snake꞉> 
#'snake/dirs
clj꞉snake꞉> 
#'snake/dirs
clj꞉snake꞉> 
; Syntax error compiling at (snake.clj:32:8).
; Unable to resolve symbol: pts in this context
; 
; Syntax error reading source at (REPL:32:27).
; Unmatched delimiter: )
clj꞉snake꞉> 
; Syntax error compiling def at (snake.clj:31:1).
; Too many arguments to def
clj꞉snake꞉> 
#'snake/add-points
clj꞉snake꞉> (map #(* 5 %)
                  [(2 0) (2 1) 1 1])
; Execution error (ClassCastException) at snake/eval7850 (REPL:105).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉snake꞉> (* 5 (1 4))
; Execution error (ClassCastException) at snake/eval7854 (REPL:108).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉snake꞉>(*5 [(1 3)]) 
; Syntax error compiling at (.calva/output-window/output.calva-repl:0:0).
; Unable to resolve symbol:   in this context
clj꞉snake꞉> (* 5 [1 3])
; Execution error (ClassCastException) at snake/eval7856 (REPL:114).
; class clojure.lang.PersistentVector cannot be cast to class java.lang.Number (clojure.lang.PersistentVector is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
clj꞉snake꞉> (add-points [10 10] [-1 0])
[9 10]
clj꞉snake꞉> 
; Syntax error compiling at (snake.clj:37:9).
; Unable to resolve symbol: point-size in this context
clj꞉snake꞉> 
#'snake/point-szie
clj꞉snake꞉> 
#'snake/dirs
clj꞉snake꞉> 
; Syntax error compiling at (snake.clj:37:9).
; Unable to resolve symbol: point-size in this context
clj꞉snake꞉> 
; Syntax error compiling at (snake.clj:37:9).
; Unable to resolve symbol: point-size in this context
clj꞉snake꞉> 
#'snake/point-size
clj꞉snake꞉> 
#'snake/point-to-screen-rect
clj꞉snake꞉> 
#'snake/create-apple
clj꞉snake꞉> 
#'snake/create-snake
clj꞉snake꞉> 
#'snake/create-snake
clj꞉snake꞉> 
#'snake/create-snake
clj꞉snake꞉> 
#'snake/move
clj꞉snake꞉> (move (create-snake))
{:body ([2 1]), :dir [1 0], :type :snake, :color #object[java.awt.Color 0x262bcd8b "java.awt.Color[r=15,g=160,b=70]"]}
clj꞉snake꞉> 
(move (create-snake) :grow)
{:body ([2 1] [1 1]),
 :dir [1 0],
 :type :snake,
 :color #object[java.awt.Color 0x6378b467 "java.awt.Color[r=15,g=160,b=70]"]}
clj꞉snake꞉> (move 
             (move (create-snake) :grow) :grow)
{:body ([3 1] [2 1] [1 1]),
 :dir [1 0],
 :type :snake,
 :color #object[java.awt.Color 0x14e0fb8a "java.awt.Color[r=15,g=160,b=70]"]}
;; => Syntax error reading source at (REPL:159:77).
;;    No reader function for tag object

clj꞉snake꞉> 
clj꞉snake꞉> 
; Syntax error reading source at (REPL:159:77).
; No reader function for tag object
#'snake/move
clj꞉snake꞉> 
#'snake/move
clj꞉snake꞉> 
; Syntax error compiling at (snake.clj:63:7).
; Unable to resolve symbol: body in this context
clj꞉snake꞉> 
#'snake/win?
clj꞉snake꞉> 
(win? {:body [[1 1]]})
false
clj꞉snake꞉> (win? {:body [[1 1] [1 2] [1 3] [1 4] [1 5]]})
true
clj꞉snake꞉> 
#'snake/head-overlaps-body?
clj꞉snake꞉> 
#'snake/lose?
clj꞉snake꞉> 
(lose? {:body [[1 1] [1 2] [1 3]]})
false
clj꞉snake꞉> 
(lose? {:body [[1 1] [1 2] [1 1]]})
true
clj꞉snake꞉> 
; Syntax error compiling at (snake.clj:73:3).
; Unable to resolve symbol: sanke-head in this context
clj꞉snake꞉> 
#'snake/eat?
clj꞉snake꞉> (eats? {:body [[1 1] [1 2]]} {:location [2 2]})
; Syntax error compiling at (.calva/output-window/output.calva-repl:195:13).
; Unable to resolve symbol: eats? in this context
clj꞉snake꞉> 
#'snake/eats?
clj꞉snake꞉> 
(eats? {:body [[1 1] [1 2]]} {:location [2 2]})
false
clj꞉snake꞉> (eats? {:body [[2 2] [1 2]]} {:location [2 2]})
false
clj꞉snake꞉> 
#'snake/eats?
clj꞉snake꞉> (eats? {:body [[2 2] [1 2]]} {:location [2 2]})
true
clj꞉snake꞉> 
#'snake/turn
clj꞉snake꞉> (turn (create-snake) [0 -1])
{:body ([1 1]), :dir [0 -1], :type :snake, :color #object[java.awt.Color 0x3eba7c7a "java.awt.Color[r=15,g=160,b=70]"]}
clj꞉snake꞉> 
#'snake/reset-game
clj꞉snake꞉> 
#'snake/reset-game
clj꞉snake꞉> 
; testing reset game
(def test-snake (ref nil))
#'snake/test-snake
clj꞉snake꞉> 
(def test-apple (ref nil))
#'snake/test-apple
clj꞉snake꞉> 
(reset-game test-apple test-snake)
nil
clj꞉snake꞉> 
@test-apple
{:body ([1 1]), :dir [1 0], :type :snake, :color #object[java.awt.Color 0x1a385da1 "java.awt.Color[r=15,g=160,b=70]"]}
clj꞉snake꞉> 
@test-snake
{:location [24 41], :color #object[java.awt.Color 0x1d98f761 "java.awt.Color[r=210,g=50,b=90]"], :type :apple}
clj꞉snake꞉> 
#'snake/update-direction
clj꞉snake꞉> (update-direction test-snake [0 1])
{:location [24 41],
 :color #object[java.awt.Color 0x1d98f761 "java.awt.Color[r=210,g=50,b=90]"],
 :type :apple,
 :dir [0 1]}
clj꞉snake꞉> 
#'snake/update-position
clj꞉snake꞉> 
#'snake/update-position
clj꞉snake꞉> (reset-game test-snake test-apple)
nil
clj꞉snake꞉> 
(dosync (alter test-apple assoc :location [1 1]))
{:location [1 1], :color #object[java.awt.Color 0x7ec359e "java.awt.Color[r=210,g=50,b=90]"], :type :apple}
clj꞉snake꞉> 
(update-position
 test-snake test-apple)
; Syntax error compiling at (.calva/output-window/output.calva-repl:250:1).
; Unable to resolve symbol: update-positions in this context
clj꞉snake꞉> (update-position
             test-snake test-apple)
nil
clj꞉snake꞉> 
; Syntax error compiling at (snake.clj:104:10).
; Unable to resolve symbol: apple in this context
clj꞉snake꞉> 
#'snake/update-positions
clj꞉snake꞉> 
#'snake/fill-point
clj꞉snake꞉> 
#'snake/paint
clj꞉snake꞉> 
#multifn[paint 0x6365622]
clj꞉snake꞉> 
#multifn[paint 0x6365622]
clj꞉snake꞉> 
#'snake/game-panel
clj꞉snake꞉> 
#multifn[paint 0x6365622]
clj꞉snake꞉> 
#multifn[paint 0x6365622]
clj꞉snake꞉> 
nil
clj꞉snake꞉> 
; Syntax error compiling at (snake.clj:158:8).
; Unable to resolve symbol: turn-millis in this context
clj꞉snake꞉> 
#'snake/turn-millis
clj꞉snake꞉> 
#'snake/game
clj꞉snake꞉> (game)
[#<Ref@238263f4: 
   {:body ([1 1]),
    :dir [1 0],
    :type :snake,
    :color #object[java.awt.Color 0x1a639cf "java.awt.Color[r=15,g=160,b=70]"]}>
 #<Ref@4b0578b7: 
   {:location [48 2], :color #object[java.awt.Color 0x2378929c "java.awt.Color[r=210,g=50,b=90]"], :type :apple}>
 #object[javax.swing.Timer 0x4d1602a4 "javax.swing.Timer@4d1602a4"]]
clj꞉snake꞉> 
